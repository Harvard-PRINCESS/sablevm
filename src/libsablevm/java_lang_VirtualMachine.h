/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_VirtualMachine */

#ifndef _Included_java_lang_VirtualMachine
#define _Included_java_lang_VirtualMachine
#ifdef __cplusplus
extern "C"
{
#endif
/* Inaccessible static: numRootThreadsCreated */
/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (Z)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__Z
    (JNIEnv *, jclass, jboolean);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (B)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__B
    (JNIEnv *, jclass, jbyte);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (S)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__S
    (JNIEnv *, jclass, jshort);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (C)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__C
    (JNIEnv *, jclass, jchar);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (I)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__I
    (JNIEnv *, jclass, jint);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (J)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__J
    (JNIEnv *, jclass, jlong);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (F)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__F
    (JNIEnv *, jclass, jfloat);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (D)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_print__D
    (JNIEnv *, jclass, jdouble);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    print
 * Signature: (Ljava/lang/String;)V
 */
  JNIEXPORT static void JNICALL
    Java_java_lang_VirtualMachine_print__Ljava_lang_String_2 (JNIEnv *,
							      jclass,
							      jstring);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (Z)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__Z
    (JNIEnv *, jclass, jboolean);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (B)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__B
    (JNIEnv *, jclass, jbyte);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (S)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__S
    (JNIEnv *, jclass, jshort);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (C)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__C
    (JNIEnv *, jclass, jchar);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (I)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__I
    (JNIEnv *, jclass, jint);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (J)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__J
    (JNIEnv *, jclass, jlong);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (F)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__F
    (JNIEnv *, jclass, jfloat);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (D)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_println__D
    (JNIEnv *, jclass, jdouble);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    println
 * Signature: (Ljava/lang/String;)V
 */
  JNIEXPORT static void JNICALL
    Java_java_lang_VirtualMachine_println__Ljava_lang_String_2 (JNIEnv *,
								jclass,
								jstring);

/*
 * Class:     java_lang_VirtualMachine
 * Method:    invokeMain
 * Signature: (Ljava/lang/Class;[Ljava/lang/String;)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VirtualMachine_invokeMain
    (JNIEnv *, jclass, jclass, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
