/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_VMThread */

#ifndef _Included_java_lang_VMThread
#define _Included_java_lang_VMThread
#ifdef __cplusplus
extern "C"
{
#endif
/*
 * Class:     java_lang_VMThread
 * Method:    nativeStart
 * Signature: (Ljava/lang/Thread;)[B
 */
  JNIEXPORT static jbyteArray JNICALL Java_java_lang_VMThread_nativeStart
    (JNIEnv *, jobject, jobject);

/*
 * Class:     java_lang_VMThread
 * Method:    nativeIsAlive
 * Signature: ([B)Z
 */
  JNIEXPORT static jboolean JNICALL Java_java_lang_VMThread_nativeIsAlive
    (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     java_lang_VMThread
 * Method:    nativeInterrupt
 * Signature: ([B)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_nativeInterrupt
    (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     java_lang_VMThread
 * Method:    nativeIsInterrupted
 * Signature: ([B)Z
 */
  JNIEXPORT static jboolean JNICALL
    Java_java_lang_VMThread_nativeIsInterrupted (JNIEnv *, jclass,
						 jbyteArray);

/*
 * Class:     java_lang_VMThread
 * Method:    suspend
 * Signature: ([B)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_suspend
    (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     java_lang_VMThread
 * Method:    resume
 * Signature: ([B)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_resume
    (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     java_lang_VMThread
 * Method:    nativeStop
 * Signature: (Ljava/lang/Throwable;)V
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_nativeStop
    (JNIEnv *, jobject, jthrowable);
 */

/*
 * Class:     java_lang_VMThread
 * Method:    currentThread
 * Signature: ()Ljava/lang/Thread;
 */
  JNIEXPORT static jobject JNICALL Java_java_lang_VMThread_currentThread
    (JNIEnv *, jclass);

/*
 * Class:     java_lang_VMThread
 * Method:    yield
 * Signature: ()V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_yield
    (JNIEnv *, jclass);

/*
 * Class:     java_lang_VMThread
 * Method:    sleep
 * Signature: (JI)V
 */
  JNIEXPORT static void JNICALL Java_java_lang_VMThread_sleep
    (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     java_lang_VMThread
 * Method:    interrupted
 * Signature: ()Z
 */
  JNIEXPORT static jboolean JNICALL Java_java_lang_VMThread_interrupted
    (JNIEnv *, jclass);

/*
 * Class:     java_lang_VMThread
 * Method:    holdsLock
 * Signature: (Ljava/lang/Object;)Z
 */
  JNIEXPORT static jboolean JNICALL Java_java_lang_VMThread_holdsLock
    (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
